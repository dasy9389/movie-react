{"version":3,"sources":["assets/tmovie.png","components/header/Header.jsx","assets/footer-bg.jpg","components/footer/Footer.jsx","components/button/Button.jsx","components/modal/Modal.jsx","api/apiConfig.js","api/axiosClient.js","api/tmdbApi.js","components/hero-slide/HeroSlide.jsx","components/movie-card/MovieCard.jsx","components/movie-list/MovieList.jsx","pages/Home.jsx","components/page-header/PageHeader.jsx","components/input/Input.jsx","components/movie-grid/MovieGrid.jsx","pages/Catalog.jsx","pages/detail/CastList.jsx","pages/detail/VideoList.jsx","pages/detail/Detail.jsx","config/Routes.jsx","App.js","index.js"],"names":["headerNav","display","path","Header","pathname","useLocation","headerRef","useRef","active","findIndex","e","useEffect","shrinkHeader","document","body","scrollTop","documentElement","current","classList","add","remove","window","addEventListener","removeEventListener","ref","className","src","logo","alt","to","map","item","index","Footer","style","backgroundImage","bg","OutlineButton","props","onClick","children","Button","ModalContent","contentRef","parentNode","onClose","Modal","useState","setActive","id","apiConfig","baseUrl","apiKey","originalImage","imgPath","w500Image","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","api_key","interceptors","request","use","a","config","response","data","error","category","movie","tv","movieType","upcoming","popular","top_rated","tvType","on_the_air","tmdbApi","getMoviesList","type","url","get","getTvList","getVideos","cate","search","detail","credits","similar","HeroSlideItem","history","useHistory","background","backdrop_path","poster_path","setModalActive","modal","querySelector","videos","results","length","videoSrc","key","setAttribute","innerHTML","toggle","title","overview","push","TrailerModal","iframeRef","width","height","HeroSlide","SwiperCore","Autoplay","movieItems","setMovieItems","getMovies","page","slice","console","log","modules","grabCursor","spaceBetween","slidesPerView","i","isActive","MovieCard","link","name","MovieList","items","setItems","getList","Home","PageHeader","Input","placeholder","value","onChange","MovieSearch","keyword","setKeyword","goToSearch","useCallback","trim","enterEvent","preventDefault","keyCode","target","MovieGrid","setPage","totalPage","setTotalPage","useParams","undefined","query","total_pages","loadMore","Catalog","CastList","casts","setCasts","getCredits","res","cast","profile_path","Video","offsetWidth","VideoList","setVideos","Detail","setItem","getDetail","scrollTo","genres","genre","Routes","component","exact","App","render","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.666a2ee1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tmovie.67797e94.png\";","import React, { useRef, useEffect } from 'react';\r\n\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport './header.scss';\r\n\r\nimport logo from '../../assets/tmovie.png';\r\n\r\nconst headerNav = [\r\n    {\r\n        display: 'Home',\r\n        path: '/'\r\n    },\r\n    {\r\n        display: 'Movies',\r\n        path: '/movie'\r\n    },\r\n    {\r\n        display: 'TV Series',\r\n        path: '/tv'\r\n    }\r\n];\r\n\r\nconst Header = () => {\r\n    const {pathname} = useLocation();\r\n    const headerRef = useRef(null);\r\n    \r\n    const active = headerNav.findIndex(e => e.path === pathname);\r\n\r\n    useEffect(() => {\r\n        const shrinkHeader = () => {\r\n            if(document.body.scrollTop > 100 || document.documentElement.scrollTop > 100){\r\n                headerRef.current.classList.add('shrink');\r\n            }else{\r\n                headerRef.current.classList.remove('shrink');\r\n            }\r\n        }\r\n\r\n        window.addEventListener('scroll', shrinkHeader);\r\n        return () => {\r\n            window.removeEventListener('scroll', shrinkHeader);\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div ref={headerRef} className=\"header\">\r\n            <div className=\"header__wrap container\">\r\n                <div className=\"logo\">\r\n                    <img src={logo} alt=\"\" />\r\n                    <Link to=\"/\">tMovies</Link>\r\n                </div>\r\n                <ul className=\"header__nav\">\r\n                    {\r\n                        headerNav.map((item, index) => (\r\n                            <li key={index} className={`${index === active ? 'active' : ''}`}>\r\n                                <Link to={item.path}>\r\n                                    {item.display}\r\n                                </Link>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/footer-bg.67e95f05.jpg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './footer.scss';\r\nimport bg from '../../assets/footer-bg.jpg';\r\nimport logo from '../../assets/tmovie.png';\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\" style={{backgroundImage: `url(${bg})`}}>\r\n            <div className=\"footer__content container\">\r\n                <div className=\"footer__content__logo\">\r\n                    <div className=\"logo\">\r\n                        <img src={logo} alt=\"\" />\r\n                        <Link to=\"/\">tMovies</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer__content__menus\">\r\n                    <div className=\"footer__content__menu\">\r\n                        <Link to=\"/\">Home</Link>\r\n                        <Link to=\"/\">Contact us</Link>\r\n                        <Link to=\"/\">Term of services</Link>\r\n                        <Link to=\"/\">About us</Link>\r\n                    </div>\r\n                    <div className=\"footer__content__menu\">\r\n                        <Link to=\"/\">Live</Link>\r\n                        <Link to=\"/\">FAQ</Link>\r\n                        <Link to=\"/\">Premium</Link>\r\n                        <Link to=\"/\">Pravacy policy</Link>\r\n                    </div>\r\n                    <div className=\"footer__content__menu\">\r\n                        <Link to=\"/\">You must watch</Link>\r\n                        <Link to=\"/\">Recent release</Link>\r\n                        <Link to=\"/\">Top IMDB</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './button.scss';\r\n\r\nconst Button = props => {\r\n    return (\r\n        <button \r\n            className={`btn ${props.className}`}\r\n            onClick={props.onClick ? () => props.onClick() : null}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport const OutlineButton = props => {\r\n    return (\r\n        <button \r\n            className={`btn btn-outline ${props.className}`}\r\n            onClick={props.onClick ? () => props.onClick() : null}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Button;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './modal.scss';\r\n\r\nconst Modal = props => {\r\n\r\n    const [active, setActive] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        setActive(props.active);\r\n    },[props.active]);\r\n\r\n    return (\r\n        <div id={props.id} className={`modal ${active ? 'active' : ''}`}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nModal.propTypes = {\r\n    active: PropTypes.bool,\r\n    id: PropTypes.string\r\n}\r\n\r\nexport const ModalContent = props => {\r\n\r\n    const contentRef = useRef(null);\r\n    \r\n    const closeModal = () => {\r\n        contentRef.current.parentNode.classList.remove('active');\r\n        if(props.onClose) props.onClose();\r\n    }\r\n\r\n    return (\r\n        <div ref={contentRef} className=\"modal__content\">\r\n            {props.children}\r\n            <div className=\"modal__content__close\" onClick={closeModal}>\r\n                <i className=\"bx bx-x\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nModalContent.propTypes = {\r\n    onClose: PropTypes.func\r\n}\r\n\r\nexport default Modal;\r\n","const apiConfig = {\r\n    baseUrl: 'https://api.themoviedb.org/3/',\r\n    apiKey: 'df95cfce705a93c42dc5daba3d46e397',\r\n    originalImage: (imgPath) => `https://image.tmdb.org/t/p/original/${imgPath}`,\r\n    w500Image: (imgPath) => `https://image.tmdb.org/t/p/w500/${imgPath}`\r\n}\r\n\r\nexport default apiConfig;","import axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\nimport apiConfig from './apiConfig';\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: apiConfig.baseUrl,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n    paramsSerializer: params => queryString.stringify({...params, api_key: apiConfig.apiKey})\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => config);\r\n\r\naxiosClient.interceptors.response.use((response) => {\r\n    if (response && response.data) {\r\n        return response.data;\r\n    }\r\n\r\n    return response;\r\n}, (error) => {\r\n    throw error;\r\n});\r\n\r\nexport default axiosClient;","import axiosClient from \"./axiosClient\";\r\n\r\nexport const category = {\r\n    movie: 'movie',\r\n    tv: 'tv'\r\n}\r\n\r\nexport const movieType = {\r\n    upcoming: 'upcoming',\r\n    popular: 'popular',\r\n    top_rated: 'top_rated'\r\n}\r\n\r\nexport const tvType = {\r\n    popular: 'popular',\r\n    top_rated: 'top_rated',\r\n    on_the_air: 'on_the_air'\r\n}\r\n\r\nconst tmdbApi = {\r\n    getMoviesList: (type, params) => {\r\n        const url = 'movie/' + movieType[type];\r\n        return axiosClient.get(url, params);\r\n    },\r\n    getTvList: (type, params) => {\r\n        const url = 'tv/' + tvType[type];\r\n        return axiosClient.get(url, params);\r\n    },\r\n    getVideos: (cate, id) => {\r\n        const url = category[cate] + '/' + id + '/videos';\r\n        return axiosClient.get(url, {params: {}});\r\n    },\r\n    search: (cate, params) => {\r\n        const url = 'search/' + category[cate];\r\n        return axiosClient.get(url, params);\r\n    },\r\n    detail: (cate, id, params) => {\r\n        const url = category[cate] + '/' + id;\r\n        return axiosClient.get(url, params);\r\n    },\r\n    credits: (cate, id) => {\r\n        const url = category[cate] + '/' + id + '/credits';\r\n        return axiosClient.get(url, {params: {}});\r\n    },\r\n    similar: (cate, id) => {\r\n        const url = category[cate] + '/' + id + '/similar';\r\n        return axiosClient.get(url, {params: {}});\r\n    },\r\n}\r\n\r\nexport default tmdbApi;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport SwiperCore, { Autoplay } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\nimport Button, { OutlineButton } from '../button/Button'\r\nimport Modal, {ModalContent} from '../modal/Modal';\r\n\r\nimport tmdbApi, {category, movieType} from '../../api/tmdbApi';\r\nimport apiConfig from '../../api/apiConfig';\r\n\r\nimport './hero-slide.scss';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst HeroSlide = () => {\r\n\r\n    SwiperCore.use([Autoplay]);\r\n\r\n    const [movieItems, setMovieItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getMovies = async () => {\r\n            const params = {page: 1}\r\n            try {\r\n                const response = await tmdbApi.getMoviesList(movieType.popular, {params});\r\n                setMovieItems(response.results.slice(1, 4));\r\n                console.log(response);\r\n            } catch {\r\n                console.log('error');\r\n            }\r\n        }\r\n        getMovies();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"hero-slide\">\r\n            <Swiper\r\n                modules={[Autoplay]}\r\n                grabCursor={true}\r\n                spaceBetween={0}\r\n                slidesPerView={1}\r\n            >\r\n                {\r\n                    movieItems.map((item, i) => (\r\n                        <SwiperSlide key={i}>\r\n                            {({ isActive }) => (\r\n                                <HeroSlideItem item={item} className={`${isActive ? 'active' : ''}`} />\r\n                            )}\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n            {\r\n                movieItems.map((item, i) => <TrailerModal key={i} item={item} />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst HeroSlideItem = props => {\r\n\r\n    let history = useHistory();\r\n    \r\n    const item = props.item;\r\n\r\n    const background = apiConfig.originalImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\r\n\r\n    const setModalActive = async () => {\r\n        const modal = document.querySelector(`#modal_${item.id}`);\r\n\r\n        const videos = await tmdbApi.getVideos(category.movie, item.id);\r\n\r\n        if(videos.results.length > 0){\r\n            const videoSrc = 'https://www.youtube.com/embed/' + videos.results[0].key;\r\n            modal.querySelector('.modal__content > iframe').setAttribute('src', videoSrc);\r\n        }else{\r\n            modal.querySelector('.modal__content').innerHTML = 'No trailer';\r\n        }\r\n\r\n        modal.classList.toggle('active')\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className={`hero-slide__item ${props.className}`}\r\n            style={{backgroundImage: `url(${background})`}}    \r\n        >\r\n            <div className=\"hero-slide__item__content container\">\r\n                <div className=\"hero-slide__item__content__info\">\r\n                    <h2 className=\"title\">{item.title}</h2>\r\n                    <div className=\"overview\">{item.overview}</div>\r\n                    <div className=\"btns\">\r\n                        <Button onClick={() => history.push('/movie/' + item.id)}>\r\n                            Watch now\r\n                        </Button>\r\n                        <OutlineButton onClick={setModalActive}>\r\n                            Watch trailer\r\n                        </OutlineButton>\r\n                    </div>\r\n                </div>\r\n                <div className=\"hero-slide__item__content__poster\">\r\n                    <img src={apiConfig.w500Image(item.poster_path)} alt=\"\" />\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst TrailerModal = props => {\r\n    const item = props.item;\r\n\r\n    const iframeRef = useRef(null);\r\n\r\n    const onClose = () => iframeRef.current.setAttribute('src','');\r\n\r\n    return (\r\n        <Modal active={false} id={`modal_${item.id}`}>\r\n            <ModalContent onClose={onClose}>\r\n                <iframe ref={iframeRef} width=\"100%\" height=\"500px\" title=\"trailer\"></iframe>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default HeroSlide;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Button from '../button/Button';\r\n\r\nimport './movie-card.scss';\r\n\r\nimport tmdbApi, { category } from '../../api/tmdbApi';\r\nimport apiConfig from '../../api/apiConfig';\r\n\r\n\r\nconst MovieCard = props => {\r\n\r\n    const item = props.item;\r\n\r\n    const link = '/' + category[props.category] + '/' + item.id;\r\n\r\n    const bg = apiConfig.w500Image(item.poster_path || item.backdrop_path);\r\n\r\n    return (\r\n        <Link to={link}>\r\n            <div className=\"movie-card\" style={{backgroundImage: `url(${bg})`}}>\r\n                <Button>\r\n                    <i className=\"bx bx-play\"></i>\r\n                </Button>\r\n            </div>\r\n            <h3>{item.title || item.name}</h3>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default MovieCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './movie-list.scss';\r\n\r\nimport { SwiperSlide, Swiper } from 'swiper/react';\r\n// import { Link } from 'react-router-dom';\r\n\r\nimport Button from '../button/Button';\r\nimport MovieCard from '../movie-card/MovieCard';\r\n\r\nimport tmdbApi, { category } from '../../api/tmdbApi';\r\n// import apiConfig from '../../api/apiConfig';\r\n\r\n\r\nconst MovieList = props => {\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const getList = async () => {\r\n            let response = null;\r\n            const params= {}\r\n\r\n            if(props.type !== 'similar'){\r\n                switch(props.category){\r\n                    case category.movie:\r\n                        response = await tmdbApi.getMoviesList(props.type, {params});\r\n                        break;\r\n                    default:\r\n                        response = await tmdbApi.getTvList(props.type, {params});\r\n                }\r\n            }else{\r\n                response = await tmdbApi.similar(props.category, props.id);\r\n            }\r\n            setItems(response.results);\r\n        }\r\n        getList();\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"movie-list\">\r\n            <Swiper\r\n                grabCursor={true}\r\n                spaceBetween={10}\r\n                slidesPerView={'auto'}\r\n            >\r\n                {\r\n                    items.map((item, i) => (\r\n                        <SwiperSlide key={i}>\r\n                            <MovieCard item={item} category={props.category} />\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n        </div>\r\n    )\r\n}\r\n\r\nMovieList.propTypes = {\r\n    category: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default MovieList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { OutlineButton } from '../components/button/Button';\r\nimport HeroSlide from '../components/hero-slide/HeroSlide';\r\nimport MovieList from '../components/movie-list/MovieList';\r\n\r\nimport { category, movieType, tvType } from '../api/tmdbApi';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <HeroSlide />\r\n            <div className=\"container\">\r\n                <div className=\"section mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Trending Movies</h2>\r\n                        <Link to=\"/movie\">\r\n                            <OutlineButton className=\"small\">View more</OutlineButton>\r\n                        </Link>\r\n                    </div>\r\n                    <MovieList category={category.movie} type={movieType.popular} />\r\n                </div>\r\n\r\n                <div className=\"section mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Top Rated Movies</h2>\r\n                        <Link to=\"/movie\">\r\n                            <OutlineButton className=\"small\">View more</OutlineButton>\r\n                        </Link>\r\n                    </div>\r\n                    <MovieList category={category.movie} type={movieType.top_rated} />\r\n                </div>\r\n\r\n                <div className=\"section mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Trending TV</h2>\r\n                        <Link to=\"/movie\">\r\n                            <OutlineButton className=\"small\">View more</OutlineButton>\r\n                        </Link>\r\n                    </div>\r\n                    <MovieList category={category.tv} type={tvType.popular} />\r\n                </div>\r\n\r\n                <div className=\"section mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Top Rated TV</h2>\r\n                        <Link to=\"/movie\">\r\n                            <OutlineButton className=\"small\">View more</OutlineButton>\r\n                        </Link>\r\n                    </div>\r\n                    <MovieList category={category.tv} type={tvType.top_rated} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nimport'./page-header.scss';\r\nimport bg from '../../assets/footer-bg.jpg';\r\n\r\nconst PageHeader = props => {\r\n    return (\r\n        <div className=\"page-header\" style={{backgroundImage: `url(${bg})`}}>\r\n            <h2>{props.children}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\n\r\nimport './input.scss';\r\n\r\nconst Input = props => {\r\n    return (\r\n        <div>\r\n            <input\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                value={props.value}\r\n                onChange={props.onChange ? e => props.onChange(e) : null}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\nimport './movie-grid.scss';\r\n\r\nimport MovieCard from '../movie-card/MovieCard';\r\nimport tmdbApi, { category, movieType, tvType } from '../../api/tmdbApi';\r\nimport Button, { OutlineButton } from '../button/Button';\r\nimport Input from '../input/Input';\r\n\r\n\r\n\r\nconst MovieGrid = props => {\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [totalPage, setTotalPage] = useState(0);\r\n\r\n    const { keyword } = useParams();\r\n\r\n    useEffect(()=>{\r\n        const getList = async () => {\r\n            let response = null;\r\n\r\n            if(keyword === undefined){\r\n                const params = {};\r\n                switch(props.category) {\r\n                    case category.movie:\r\n                        response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\r\n                        break;\r\n                    default:\r\n                        response = await tmdbApi.getTvList(tvType.popular, {params});\r\n                }\r\n            }else{\r\n                const params = {\r\n                    query: keyword\r\n                }\r\n                response = await tmdbApi.search(props.category, {params});\r\n            }\r\n            setItems(response.results);\r\n            setTotalPage(response.total_pages);\r\n        }\r\n        getList();\r\n    },[props.category, keyword]);\r\n\r\n    const loadMore = async () => {\r\n        let response = null;\r\n\r\n        if(keyword === undefined){\r\n            const params = {\r\n                page: page + 1\r\n            };\r\n            switch(props.category) {\r\n                case category.movie:\r\n                    response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\r\n                    break;\r\n                default:\r\n                    response = await tmdbApi.getTvList(tvType.popular, {params});\r\n            }\r\n        }else{\r\n            const params = {\r\n                page: page + 1,\r\n                query: keyword\r\n            }\r\n            response = await tmdbApi.search(props.category, {params});\r\n        }\r\n        setItems([...items, ...response.results]);\r\n        setPage(page + 1);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"section mb-3\">\r\n                <MovieSearch category={props.category} keyword={keyword} />\r\n            </div>\r\n            <div className=\"movie-grid\">\r\n                {\r\n                    items.map((item, i)=> <MovieCard key={i} category={props.category} item={item} />)\r\n                }\r\n            </div>\r\n            {\r\n                page < totalPage ? (\r\n                    <div className=\"movie-grid__loadmore\">\r\n                        <OutlineButton className=\"small\" onClick={loadMore}>Load more</OutlineButton>\r\n                    </div>\r\n                ) : null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst MovieSearch = props => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [keyword, setKeyword] = useState(props.keyword ? props.keyword : '');\r\n\r\n    const goToSearch = useCallback(\r\n        () => {\r\n            if(keyword.trim().length > 0){\r\n                history.push(`/${category[props.category]}/search/${keyword}`);\r\n            }\r\n        },\r\n        [keyword, props.category, history],\r\n    )\r\n\r\n    useEffect(()=>{\r\n        const enterEvent = (e) => {\r\n            e.preventDefault();\r\n            if(e.keyCode === 13){\r\n                goToSearch();\r\n            }\r\n        }\r\n        document.addEventListener('keyup',enterEvent);\r\n        return() => {\r\n            document.removeEventListener('keyup',enterEvent);\r\n        }\r\n    },[keyword, goToSearch]);\r\n\r\n    return(\r\n        <div className=\"movie-search\">\r\n            <Input\r\n                type=\"text\"\r\n                placeholder=\"Enter keyword\"\r\n                value={keyword}\r\n                onChange={e => setKeyword(e.target.value)}\r\n            />\r\n            <Button className=\"small\" onClick={goToSearch}>Search</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieGrid;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport PageHeader from '../components/page-header/PageHeader'\r\nimport { category as cate } from '../api/tmdbApi';\r\nimport MovieGrid from '../components/movie-grid/MovieGrid';\r\n\r\nconst Catalog = () => {\r\n\r\n    const {category} = useParams();\r\n    //console.log(category) --> lay /params\r\n\r\n    return (\r\n        <>\r\n            <PageHeader>\r\n                {category === cate.movie ? 'Movies' : 'TV Series'} \r\n            </PageHeader>\r\n            <div className=\"container\">\r\n                <div className=\"section mb-3\">\r\n                    <MovieGrid category={category} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Catalog;\r\n","import React, { useState, useEffect} from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport tmdbApi from '../../api/tmdbApi';\r\nimport apiConfig from '../../api/apiConfig';\r\n\r\nconst CastList = props => {\r\n\r\n    const {category} = useParams();\r\n    \r\n    const [casts, setCasts] = useState([]);\r\n\r\n    useEffect(()=> {\r\n        const getCredits = async () => {\r\n            const res = await tmdbApi.credits(category, props.id);\r\n            setCasts(res.cast.slice(0, 5));\r\n        }\r\n        getCredits();\r\n    },[category, props.id]);\r\n\r\n\r\n    return (\r\n        <div className=\"casts\">\r\n            {\r\n                casts.map((item, i) => (\r\n                    <div className=\"casts__item\" key={i}>\r\n                        <div className=\"casts__item__img\" style={{backgroundImage: `url(${apiConfig.w500Image(item.profile_path)})`}}></div>\r\n                        <p className=\"casts__item__name\">{item.name}</p>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CastList;\r\n","import React, { useState, useEffect, useRef} from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport tmdbApi from '../../api/tmdbApi';\r\nimport apiConfig from '../../api/apiConfig';\r\n\r\nconst VideoList = props => {\r\n\r\n    const {category} = useParams();\r\n    \r\n    const [videos, setVideos] = useState([]);\r\n\r\n    useEffect(()=> {\r\n        const getVideos = async () => {\r\n            const res = await tmdbApi.getVideos(category, props.id);\r\n            setVideos(res.results.slice(0, 5));\r\n        }\r\n        getVideos();\r\n    },[category, props.id]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                videos.map((item, i) => (\r\n                    <Video key={i} item={item} />\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst Video = props => {\r\n\r\n    const item = props.item;\r\n\r\n    const iframeRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n\r\n        const height = iframeRef.current.offsetWidth * 9 / 16 + 'px';\r\n        iframeRef.current.setAttribute('height', height);\r\n\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"video\">\r\n            <div className=\"video__title\">\r\n                <h2>{item.name}</h2>\r\n            </div>\r\n            <iframe \r\n                src={`https://www.youtube.com/embed/${item.key}`}\r\n                ref={iframeRef}\r\n                width=\"100%\"\r\n                title=\"video\"\r\n            ></iframe>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoList;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { useParams } from \"react-router\";\r\n\r\nimport tmdbApi from '../../api/tmdbApi';\r\nimport apiConfig from '../../api/apiConfig';\r\n\r\nimport './detail.scss';\r\nimport CastList from './CastList';\r\nimport VideoList from './VideoList';\r\nimport MovieList from '../../components/movie-list/MovieList';\r\n\r\n\r\nconst Detail = () => {\r\n\r\n    const { category, id } = useParams();\r\n\r\n    const [item, setItem] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        const getDetail = async () => {\r\n            const response = await tmdbApi.detail(category, id, {params: {}});\r\n            setItem(response);\r\n            window.scrollTo(0,0);\r\n        }\r\n        getDetail();\r\n    },[category, id])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                item && (\r\n                    <>\r\n                        <div \r\n                            className=\"banner\" \r\n                            style={{\r\n                                backgroundImage: `url(${apiConfig.originalImage(item.backdrop_path || item.poster_path)})`\r\n                            }}\r\n                        ></div>\r\n                        <div className=\"mb-3 movie-content container\">\r\n                            <div className=\"movie-content__poster\">\r\n                                <div className=\"movie-content__poster__img\" style={{\r\n                                backgroundImage: `url(${apiConfig.originalImage(item.poster_path || item.backdrop_path)})`\r\n                            }}></div>\r\n                            </div>\r\n                            <div className=\"movie-content__info\">\r\n                                <h1 className=\"title\">\r\n                                    {item.title || item.name}\r\n                                </h1>\r\n                                <div className=\"genres\">\r\n                                    {\r\n                                        item.genres && item.genres.slice(0, 5).map((genre, i) => (\r\n                                            <span key={i} className=\"genres__item\">{genre.name}</span>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                                <p className=\"overview\">{item.overview}</p>\r\n                                <div className=\"cast\">\r\n                                    <div className=\"section__header\">\r\n                                        <h2>Casts</h2>\r\n                                    </div>\r\n                                    <CastList id={item.id} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container\">\r\n                            <div className=\"section mb-3\">\r\n                                <VideoList id={item.id} />\r\n                            </div>\r\n                            <div className=\"section mb-3\">\r\n                                <div className=\"section__header mb-2\">\r\n                                    <h2>Similar</h2>\r\n                                </div>\r\n                                <MovieList category={category} type=\"similar\" id={item.id} />\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Detail;\r\n","import React from 'react';\r\n\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from '../pages/Home';\r\nimport Catalog from '../pages/Catalog';\r\nimport Detail from '../pages/detail/Detail';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route \r\n                path=\"/:category/search/:keyword\"\r\n                component={Catalog}\r\n            />\r\n            <Route \r\n                path=\"/:category/:id\"\r\n                component={Detail}\r\n            />\r\n            <Route \r\n                path=\"/:category\"\r\n                component={Catalog}\r\n            />\r\n            <Route \r\n                path=\"/\"\r\n                exact\r\n                component={Home}\r\n            />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes;\r\n","import 'swiper/swiper.min.css';\nimport './assets/boxicons-2.0.7/css/boxicons.css';\nimport './App.scss';\n\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Header from './components/header/Header';\nimport Footer from './components/footer/Footer';\n\nimport Routes from './config/Routes';\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Route render={ props => (\n                <>\n                    <Header {...props} />\n                    <Routes />\n                    <Footer />\n                </>\n            )}/>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}